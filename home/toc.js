const tocData = '
<div id="sidetoggle">
  <div>
    <div class="sidefilter">
      <form class="toc-filter">
        <span class="glyphicon glyphicon-filter filter-icon"></span>
        <span class="glyphicon glyphicon-remove clear-icon" id="toc_filter_clear"></span>
        <input type="text" id="toc_filter_input" placeholder="Filter by Title" onkeypress="if(event.keyCode==13) {return false;}">
      </form>
    </div>
    <div class="sidetoc">
      <div class="toc" id="toc">
          
          <ul class="nav level1">
                <li class="nav-item">
                    <span class="expand-stub"></span>
                    <a class="nav-link" href="../index.html" title="Emby Streams Home">Emby Streams Home</a>
                    
                    <ul class="nav level2">
                          <li class="nav-item">
                              <a class="nav-link" href="../lists/listbytype.html" title="M3U by Type">M3U by Type</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../lists/listbyprovider.html" title="M3U by Provider">M3U by Provider</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../lists/listbycountry.html" title="M3U by Country">M3U by Country</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../lists/listbylanguage.html" title="M3U by Language">M3U by Language</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../lists/listbydatasource.html" title="M3U by Data Source">M3U by Data Source</a>
                          </li>
                    </ul>
                </li>
                <li class="nav-item">
                    <span class="expand-stub"></span>
                    <a class="nav-link">M3U Lists</a>
                    
                    <ul class="nav level2">
                          <li class="nav-item">
                              <a class="nav-link" href="../sources/de-deu-wdr_br_hr_mdr_ndr_rbb_sr_swr_rbtv-films-intl-mv.html" title="Movies - 3rd Programs - Int - DEU">Movies - 3rd Programs - Int - DEU</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../sources/de-deu-wdr_br_hr_mdr_ndr_rbb_sr_swr_rbtv-films-local-mv.html" title="Movies - 3rd Programs - Loc - DEU">Movies - 3rd Programs - Loc - DEU</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../sources/de-deu-3sat-films-intl-mv.html" title="Movies - 3sat - Int - DEU">Movies - 3sat - Int - DEU</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../sources/de-deu-3sat-films-local-mv.html" title="Movies - 3sat - Loc - DEU">Movies - 3sat - Loc - DEU</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../sources/de-deu-ard-films-intl-mv.html" title="Movies - ARD - Int - DEU">Movies - ARD - Int - DEU</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../sources/de-deu-ard-films-local-mv.html" title="Movies - ARD - Loc - DEU">Movies - ARD - Loc - DEU</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../sources/de-deu-arte-films-mv.html" title="Movies - Arte - DEU">Movies - Arte - DEU</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../sources/fr-fra-arte-films-mv.html" title="Movies - Arte - FRA">Movies - Arte - FRA</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../sources/deu-archive-films-archive.html" title="Movies - Internet Archive - DEU">Movies - Internet Archive - DEU</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../sources/eng-archive-films-archive.html" title="Movies - Internet Archive - ENG">Movies - Internet Archive - ENG</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../sources/fra-archive-films-archive.html" title="Movies - Internet Archive - FRA">Movies - Internet Archive - FRA</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../sources/ita-archive-films-archive.html" title="Movies - Internet Archive - ITA">Movies - Internet Archive - ITA</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../sources/jpn-archive-films-archive.html" title="Movies - Internet Archive - JPN">Movies - Internet Archive - JPN</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../sources/spa-archive-films-archive.html" title="Movies - Internet Archive - SPA">Movies - Internet Archive - SPA</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../sources/tur-archive-films-archive.html" title="Movies - Internet Archive - TUR">Movies - Internet Archive - TUR</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../sources/ch-deu-srf-films-mv.html" title="Movies - SRF - DEU">Movies - SRF - DEU</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../sources/eng-wikimedia-films-wikidata.html" title="Movies - Wikimedia Commons - ENG">Movies - Wikimedia Commons - ENG</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../sources/de-deu-zdf-films-intl-mv.html" title="Movies - ZDF - Int - DEU">Movies - ZDF - Int - DEU</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../sources/de-deu-zdf-films-local-mv.html" title="Movies - ZDF - Loc - DEU">Movies - ZDF - Loc - DEU</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../sources/wikidata-radios-wikidata.html" title="Radio Stations - Wikidata">Radio Stations - Wikidata</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../sources/de-deu-wdr_br_hr_mdr_ndr_rbb_sr_swr_rbtv-tvshows-intl-mv.html" title="TV Shows - 3rd Programs - Int - DEU">TV Shows - 3rd Programs - Int - DEU</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../sources/de-deu-wdr_br_hr_mdr_ndr_rbb_sr_swr_rbtv-tvshows-local-mv.html" title="TV Shows - 3rd Programs - Loc - DEU">TV Shows - 3rd Programs - Loc - DEU</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../sources/de-deu-3sat-tvshows-intl-mv.html" title="TV Shows - 3sat - Int - DEU">TV Shows - 3sat - Int - DEU</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../sources/de-deu-3sat-tvshows-local-mv.html" title="TV Shows - 3sat - Loc - DEU">TV Shows - 3sat - Loc - DEU</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../sources/de-deu-ard-tvshows-intl-mv.html" title="TV Shows - ARD - Int - DEU">TV Shows - ARD - Int - DEU</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../sources/de-deu-ard-tvshows-local-mv.html" title="TV Shows - ARD - Loc - DEU">TV Shows - ARD - Loc - DEU</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../sources/de-deu-arte-tvshows-mv.html" title="TV Shows - Arte - DEU">TV Shows - Arte - DEU</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../sources/de-eng-arte-tvshows-mv.html" title="TV Shows - Arte - ENG">TV Shows - Arte - ENG</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../sources/fr-fra-arte-tvshows-mv.html" title="TV Shows - Arte - FRA">TV Shows - Arte - FRA</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../sources/de-ita-arte-tvshows-mv.html" title="TV Shows - Arte - ITA">TV Shows - Arte - ITA</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../sources/de-pol-arte-tvshows-mv.html" title="TV Shows - Arte - POL">TV Shows - Arte - POL</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../sources/de-spa-arte-tvshows-mv.html" title="TV Shows - Arte - SPA">TV Shows - Arte - SPA</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../sources/de-deu-dw-tvshows-local-mv.html" title="TV Shows - DW - Loc - DEU">TV Shows - DW - Loc - DEU</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../sources/de-deu-funk-tvshows-local-mv.html" title="TV Shows - Funk - Loc - DEU">TV Shows - Funk - Loc - DEU</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../sources/de-deu-kika_zdftivi-tvshows-intl-mv.html" title="TV Shows - KiKA+tivi - Int - DEU">TV Shows - KiKA+tivi - Int - DEU</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../sources/de-deu-kika_zdftivi-tvshows-local-mv.html" title="TV Shows - KiKA+tivi - Loc - DEU">TV Shows - KiKA+tivi - Loc - DEU</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../sources/at-deu-orf-tvshows-mv.html" title="TV Shows - ORF - DEU">TV Shows - ORF - DEU</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../sources/de-deu-phoenix-tvshows-local-mv.html" title="TV Shows - Phoenix - Loc - DEU">TV Shows - Phoenix - Loc - DEU</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../sources/ch-deu-srf-tvshows-mv.html" title="TV Shows - SRF - DEU">TV Shows - SRF - DEU</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../sources/de-deu-zdf-tvshows-intl-mv.html" title="TV Shows - ZDF - Int - DEU">TV Shows - ZDF - Int - DEU</a>
                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="../sources/de-deu-zdf-tvshows-local-mv.html" title="TV Shows - ZDF - Loc - DEU">TV Shows - ZDF - Loc - DEU</a>
                          </li>
                    </ul>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="changelog.html" title="Site Changes">Site Changes</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="resources.html" title="Help and Resources">Help and Resources</a>
                </li>
          </ul>
      </div>
    </div>
  </div>
</div>';
